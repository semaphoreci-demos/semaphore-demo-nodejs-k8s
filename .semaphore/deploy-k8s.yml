version: v1.0
name: Deploy to Kubernetes
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
global_job_config:
  epilogue:
    always:
      commands:
        - '[[ -f report.xml ]] && test-results publish report.xml'
blocks:
  - name: Deploy
    task:
      env_vars: []
      jobs:
        - name: Deploy
          commands:
            - checkout
            - envsubst < deployment.yml > deploy-production.yml
            - kubectl apply -f deploy-production.yml
      secrets:
        - name: kubeconfig
    dependencies:
      - Build image
  - name: Build image
    dependencies:
      - Kubescape
    task:
      jobs:
        - name: Docker build
          commands:
            - checkout
            - cp ormconfig.sample.json ormconfig.json
            - cp sample.env production.env
            - 'docker build -t ttl.sh/$SEMAPHORE_WORKFLOW_ID:2h .'
            - 'docker push ttl.sh/$SEMAPHORE_WORKFLOW_ID:2h'
  - name: Kubescape
    dependencies: []
    task:
      prologue:
        commands:
          - 'curl -s https://raw.githubusercontent.com/armosec/kubescape/master/install.sh | /bin/bash'
      jobs:
        - name: Scan manifest
          commands:
            - checkout
            - export MAX_RISK=40
            - kubescape scan -t "$MAX_RISK" deployment.yml --format junit -o report.xml||true
        - name: Scan cluster
          commands:
            - checkout
            - export MAX_RISK=40
            - 'kubescape scan --exclude-namespaces kube-system,kube-public -t $MAX_RISK --format junit -o report.xml||true'
      secrets:
        - name: kubeconfig
after_pipeline:
  task:
    jobs:
      - name: Publish Results
        commands:
          - test-results gen-pipeline-report
